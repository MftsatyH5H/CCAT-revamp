[INFO ] 2024-11-19 07:55:26.217 [background-preinit] [Version.<clinit>] {} - HV000001: Hibernate Validator 6.2.5.Final
[INFO ] 2024-11-19 07:55:29.364 [main] [SpringApplication.logStartupProfileInfo] {} - The following 1 profile is active: "development"
[INFO ] 2024-11-19 07:55:34.993 [main] [DirectJDKLog.log] {} - An older version [1.2.36] of the Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.38]
[INFO ] 2024-11-19 07:55:34.994 [main] [DirectJDKLog.log] {} - Loaded Apache Tomcat Native library [1.2.36] using APR version [1.7.2].
[INFO ] 2024-11-19 07:55:34.994 [main] [DirectJDKLog.log] {} - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
[INFO ] 2024-11-19 07:55:34.996 [main] [DirectJDKLog.log] {} - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
[INFO ] 2024-11-19 07:55:35.019 [main] [DirectJDKLog.log] {} - OpenSSL successfully initialized [OpenSSL 1.1.1t  7 Feb 2023]
[INFO ] 2024-11-19 07:55:35.035 [main] [DirectJDKLog.log] {} - Initializing ProtocolHandler ["http-nio-8049"]
[INFO ] 2024-11-19 07:55:35.039 [main] [DirectJDKLog.log] {} - Starting service [Tomcat]
[INFO ] 2024-11-19 07:55:35.040 [main] [DirectJDKLog.log] {} - Starting Servlet engine: [Apache Tomcat/9.0.82]
[INFO ] 2024-11-19 07:55:35.544 [main] [DirectJDKLog.log] {} - Initializing Spring embedded WebApplicationContext
[DEBUG] 2024-11-19 07:55:44.385 [main] [ServiceManager.startupEvent] {} - starting balance dispute service
[DEBUG] 2024-11-19 07:55:44.385 [main] [ServiceManager.startupEvent] {} - start loading cached balance dispute report
[INFO ] 2024-11-19 07:55:44.385 [main] [BalanceDisputeTemplatesCache.init] {} - Start reading content from file= [BD_calculator.xlsm]
[INFO ] 2024-11-19 07:56:05.235 [main] [DirectJDKLog.log] {} - Starting ProtocolHandler ["http-nio-8049"]
[DEBUG] 2024-11-19 07:56:07.438 [main] [ServiceManager.startupEvent] {} - starting balance dispute service
[DEBUG] 2024-11-19 07:56:07.439 [main] [ServiceManager.startupEvent] {} - start loading cached balance dispute report
[INFO ] 2024-11-19 07:56:07.439 [main] [BalanceDisputeTemplatesCache.init] {} - Start reading content from file= [BD_calculator.xlsm]
[INFO ] 2024-11-19 07:56:07.441 [main] [StartupInfoLogger.logStarted] {} - Started BalanceDisputeServiceApplication in 43.397 seconds (JVM running for 47.412)
[DEBUG] 2024-11-19 07:56:07.452 [main] [BalanceDisputeDatasourceManager.register] {} - Start Registering Balance Dispute datasource
[DEBUG] 2024-11-19 07:56:07.452 [main] [BalanceDisputeDatasourceManager.retrieveProps] {} - Start Retrieving Balance Dispute datasource required Data from database
[DEBUG] 2024-11-19 07:56:07.452 [main] [BalanceDisputeDatasourceManager.retrieveProps] {} - Balance Dispute datasource required Data retrieved from database Successfully
[DEBUG] 2024-11-19 07:56:07.466 [main] [DatasourceManager.createDataSource] {} - DatasourceManager -> createDataSource() : Started With datasource model :DataSourceModel{URL='jdbc:oracle:thin:@10.0.20.26:1521/orcl', username='SYSADM', password='SYSADM', schema='null'}
[DEBUG] 2024-11-19 07:56:08.189 [main] [DatasourceManager.createDataSource] {} - DatasourceManager -> createDataSource() : Ended Successfully
[DEBUG] 2024-11-19 07:56:08.189 [main] [BalanceDisputeDatasourceManager.register] {} - Registering Balance Dispute datasource Ended Successfully
[DEBUG] 2024-11-19 07:56:08.198 [main] [BalanceDisputeDao.retrieveAllSPsData] {} - BalanceDisputeDao - retrieveAllSPsData() : Started
[DEBUG] 2024-11-19 07:56:08.198 [main] [BalanceDisputeDao.retrieveAllSPsData] {} - BalanceDisputeDao - retrieveAllSPsData() : Ended Successfully
[INFO ] 2024-11-19 07:56:31.023 [http-nio-8049-exec-2] [DirectJDKLog.log] {} - Initializing Spring DispatcherServlet 'dispatcherServlet'
[DEBUG] 2024-11-19 07:56:31.204 [http-nio-8049-exec-2] [BalanceDisputeController.getBalanceDisputeMap] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Get BD request Started with request = GetBalanceDisputeReportRequest{msisdn='1005871416', dateFrom=1730307198242 = Wed Oct 30 18:53:18 EET 2024, dateTo=1731974400000 = Tue Nov 19 02:00:00 EET 2024, offset=0, fetchCount=5, queryString='select * from dual', sortedBy='asc', order=1, isGetAll=true}
[DEBUG] 2024-11-19 07:56:31.206 [http-nio-8049-exec-2] [BalanceDisputeService.getBalanceDisputeMap] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - is GetAll request = true
[DEBUG] 2024-11-19 07:56:31.206 [http-nio-8049-exec-2] [BalanceDisputeService.getAllBalanceDisputeReport] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Deleting old report from redis
[DEBUG] 2024-11-19 07:56:38.346 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - AdjustmentType = [AdjustmentType{type=1, name='ADJUSTMENT'}] || SP = [GET_ADJ_FN_DWH_75] -- 
[DEBUG] 2024-11-19 07:56:39.112 [http-nio-8049-exec-2] [BalanceDisputeDao.callStoredFunction] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - -----Calling stored function GET_ADJ_FN_DWH_75 : Ended Successfully----
[DEBUG] 2024-11-19 07:56:39.114 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - #Records = 0 
functionResponse = {RESULTS=[]}
[DEBUG] 2024-11-19 07:56:39.116 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - AdjustmentType = [AdjustmentType{type=2, name='RECHARGE'}] || SP = [GET_ADJ_FN_DWH_75] -- 
[DEBUG] 2024-11-19 07:56:39.214 [http-nio-8049-exec-2] [BalanceDisputeDao.callStoredFunction] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - -----Calling stored function GET_ADJ_FN_DWH_75 : Ended Successfully----
[DEBUG] 2024-11-19 07:56:39.214 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - #Records = 0 
functionResponse = {RESULTS=[]}
[DEBUG] 2024-11-19 07:56:39.214 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - AdjustmentType = [AdjustmentType{type=3, name='PAYMENT'}] || SP = [GET_ADJ_FN_DWH_75] -- 
[DEBUG] 2024-11-19 07:56:39.325 [http-nio-8049-exec-2] [BalanceDisputeDao.callStoredFunction] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - -----Calling stored function GET_ADJ_FN_DWH_75 : Ended Successfully----
[DEBUG] 2024-11-19 07:56:39.325 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - #Records = 0 
functionResponse = {RESULTS=[]}
[DEBUG] 2024-11-19 07:56:39.326 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - AdjustmentType = [AdjustmentType{type=4, name='BONUS_OR_DEDICATED_ADJUSTMENT'}] || SP = [GET_ADJ_FN_DWH_75] -- 
[DEBUG] 2024-11-19 07:56:39.443 [http-nio-8049-exec-2] [BalanceDisputeDao.callStoredFunction] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - -----Calling stored function GET_ADJ_FN_DWH_75 : Ended Successfully----
[DEBUG] 2024-11-19 07:56:39.443 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - #Records = 16 
functionResponse = {RESULTS=[{TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=68, DA_AMOUNTS=0, TRANS_TYPE=CRE, TRANS_CODE=RESETBILLLIMITMI}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=68, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=MIONBILLIM-CLR}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=SET-DA-0-NOBAL-FLAG}, {TRX_DATE=2024-11-19T07:20:41.000+0200, DA_IDS=32, DA_AMOUNTS=0, TRANS_TYPE=DEB, TRANS_CODE=CLR-DA-NOBAL-EXPIRE}]}
[DEBUG] 2024-11-19 07:56:39.447 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - AdjustmentType = [AdjustmentType{type=0, name='USAGE_AND_ACCUMULATORS'}] || SP = [GET_MOC_PRE_FN_RA_NEW4] -- 
[DEBUG] 2024-11-19 07:56:39.614 [http-nio-8049-exec-2] [BalanceDisputeDao.callStoredFunction] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - -----Calling stored function GET_MOC_PRE_FN_RA_NEW4 : Ended Successfully----
[DEBUG] 2024-11-19 07:56:39.614 [http-nio-8049-exec-2] [BalanceDisputeService.callAndStoreFunctionResult] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - #Records = 0 
functionResponse = {RESULTS=[]}
[DEBUG] 2024-11-19 07:56:39.614 [http-nio-8049-exec-2] [BalanceDisputeService.prepareMapperRequestModel] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Preparing Mapper request model
[INFO ] 2024-11-19 07:56:39.666 [http-nio-8049-exec-2] [Loggers$Slf4JLogger.info] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - | onSubscribe([Fuseable] MonoFlatMap.FlatMapMain)
[INFO ] 2024-11-19 07:56:39.668 [http-nio-8049-exec-2] [Loggers$Slf4JLogger.info] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - | request(unbounded)
[INFO ] 2024-11-19 07:56:41.489 [reactor-http-nio-2] [Loggers$Slf4JLogger.info] {} - | onNext(com.asset.ccat.balance_dispute_service.dto.responses.BaseResponse@7519ef4c)
[DEBUG] 2024-11-19 07:56:41.490 [http-nio-8049-exec-2] [BalanceDisputeService.getAllBalanceDisputeReport] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Filtering and sort balance dispute report
[DEBUG] 2024-11-19 07:56:41.490 [http-nio-8049-exec-2] [BalanceDisputeService.sortAndFetchTransactionDetails] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Setting total count and fetching part of the data
[INFO ] 2024-11-19 07:56:41.490 [reactor-http-nio-2] [Loggers$Slf4JLogger.info] {} - | onComplete()
[DEBUG] 2024-11-19 07:56:44.548 [http-nio-8049-exec-2] [BalanceDisputeService.sortAndFetchTransactionDetails] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Sorting details by transaction date
[DEBUG] 2024-11-19 07:58:10.859 [http-nio-8049-exec-2] [BalanceDisputeService.storeResponseInRedis] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Storing report in Redis for MSISDN: 1005871416
[DEBUG] 2024-11-19 07:58:11.107 [http-nio-8049-exec-2] [BalanceDisputeService.getBalanceDisputeMap] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - BalanceDispute report: BalanceDisputeReportResponse{balanceSummarySheet=BalanceSummarySheetModel{mbRecharges=[], mbPayment=[], mbAdjustment=[], mbUsage=[], daAdjustments=[BdSubTypeModel{subType='RESETBILLLIMITMI', credit=0.0, debit=0.0, creditStr='', debitStr=''}, BdSubTypeModel{subType='MIONBILLIM-CLR', credit=0.0, debit=0.0, creditStr='', debitStr=''}, BdSubTypeModel{subType='CLR-DA-NOBAL-EXPIRE', credit=0.0, debit=0.0, creditStr='', debitStr=''}, BdSubTypeModel{subType='SET-DA-0-NOBAL-FLAG', credit=0.0, debit=0.0, creditStr='', debitStr=''}], daBonusAdj=[], daUsg=[], daAdjustmentsTtlCredit=0.0, daBonusAdjTtlCredit=0.0, mbRechargesTtlCredit=0.0, mbPaymentsTtlCredit=0.0, mbAdjustmentsTtlCredit=0.0, daAdjustmentsTtlDebit=0.0, daUsgTtlDebit=0.0, mbAdjustmentsTtlDebit=0.0, mbUsgTtlDebit=0.0, mobileTelephonyTotal=0}, usageSummarySheet=UsageSummarySheetModel{internetUsage=[BdSummaryUsageModel{type='GPRS Basic Service', total=0, intTotal=0}], mobileTelephony=[BdSummaryUsageModel{type='Vodafone', total=0, intTotal=0}, BdSummaryUsageModel{type='Mobinil', total=0, intTotal=0}, BdSummaryUsageModel{type='Etisalat', total=0, intTotal=0}], shortMessages=[BdSummaryUsageModel{type='SMS Count', total=0, intTotal=0}]}, details=BalanceDisputeDetailsModel{columnNames=[Type, Sub-Type, Date, Time, Region/Cell Site, Total Actual Seconds, Duration (in mins), Internet Usage (in KB), Other Party Number, Destination, Cost, Call End, Rating Group, Community Id, Amount, Adjustment Code, Adjustment Type, Balance Before, Balance After, DA Before, DA After, Charging Source, Charging Amount, Free SMS, Accumulator Before, Accumulator After, Bit Numbers, Account Group, Rate Plan], transactionDetailsList=[{Destination=null, Charging Source=, Time=07:20:41, Adjustment Code=RESETBILLLIMITMI, Cost=0.0, Total Actual Seconds=null, Balance After=0.0, Bit Numbers=null, Accumulator After=null, Account Group=null, Community Id=null, Duration (in mins)=null, Adjustment Type=CRE, Call End=null, DA Before=null, Amount=0.0, Region/Cell Site=null, Balance Before=0.0, Accumulator Before=null, Date=19-11-2024, Sub-Type=RESETBILLLIMITMI, Type=Adjustment, Free SMS=null, Charging Amount=, Other Party Number=null, Internet Usage (in KB)=null, Rate Plan=null, DA After=null, Rating Group=null}, {Destination=null, Charging Source=, Time=07:20:41, Adjustment Code=MIONBILLIM-CLR, Cost=0.0, Total Actual Seconds=null, Balance After=0.0, Bit Numbers=null, Accumulator After=null, Account Group=null, Community Id=null, Duration (in mins)=null, Adjustment Type=DEB, Call End=null, DA Before=null, Amount=0.0, Region/Cell Site=null, Balance Before=0.0, Accumulator Before=null, Date=19-11-2024, Sub-Type=MIONBILLIM-CLR, Type=Adjustment, Free SMS=null, Charging Amount=, Other Party Number=null, Internet Usage (in KB)=null, Rate Plan=null, DA After=null, Rating Group=null}, {Destination=null, Charging Source=, Time=07:20:41, Adjustment Code=CLR-DA-NOBAL-EXPIRE, Cost=0.0, Total Actual Seconds=null, Balance After=0.0, Bit Numbers=null, Accumulator After=null, Account Group=null, Community Id=null, Duration (in mins)=null, Adjustment Type=DEB, Call End=null, DA Before=null, Amount=0.0, Region/Cell Site=null, Balance Before=0.0, Accumulator Before=null, Date=19-11-2024, Sub-Type=CLR-DA-NOBAL-EXPIRE, Type=Adjustment, Free SMS=null, Charging Amount=, Other Party Number=null, Internet Usage (in KB)=null, Rate Plan=null, DA After=null, Rating Group=null}, {Destination=null, Charging Source=, Time=07:20:41, Adjustment Code=SET-DA-0-NOBAL-FLAG, Cost=0.0, Total Actual Seconds=null, Balance After=0.0, Bit Numbers=null, Accumulator After=null, Account Group=null, Community Id=null, Duration (in mins)=null, Adjustment Type=DEB, Call End=null, DA Before=null, Amount=0.0, Region/Cell Site=null, Balance Before=0.0, Accumulator Before=null, Date=19-11-2024, Sub-Type=SET-DA-0-NOBAL-FLAG, Type=Adjustment, Free SMS=null, Charging Amount=, Other Party Number=null, Internet Usage (in KB)=null, Rate Plan=null, DA After=null, Rating Group=null}, {Destination=null, Charging Source=, Time=07:20:41, Adjustment Code=SET-DA-0-NOBAL-FLAG, Cost=0.0, Total Actual Seconds=null, Balance After=0.0, Bit Numbers=null, Accumulator After=null, Account Group=null, Community Id=null, Duration (in mins)=null, Adjustment Type=DEB, Call End=null, DA Before=null, Amount=0.0, Region/Cell Site=null, Balance Before=0.0, Accumulator Before=null, Date=19-11-2024, Sub-Type=SET-DA-0-NOBAL-FLAG, Type=Adjustment, Free SMS=null, Charging Amount=, Other Party Number=null, Internet Usage (in KB)=null, Rate Plan=null, DA After=null, Rating Group=null}], totalMBCredit=0.0, totalMBDebit=0.0, totalDACredit=0.0, totalDADebit=0.0, totalAmountCredit=0.0, totalAmountDebit=0.0, totalDuration=0.0, totalCost=0.0, totalActualSeconds=0.0, totalFreeSms=0.0, totalInternetUsage=0.0}, totalCount=10}
[DEBUG] 2024-11-19 07:58:11.108 [http-nio-8049-exec-2] [BalanceDisputeController.getBalanceDisputeMap] {msisdn=1005871416, requestId=setttt-22222, sessionId=10123kdlkmasdf} - Get BD request Ended
